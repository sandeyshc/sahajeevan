[{"E:\\Official\\React\\Sahjeevan-Frontend\\src\\index.js":"1","E:\\Official\\React\\Sahjeevan-Frontend\\src\\Routes.js":"2","E:\\Official\\React\\Sahjeevan-Frontend\\src\\reportWebVitals.js":"3","E:\\Official\\React\\Sahjeevan-Frontend\\src\\views\\index.js":"4","E:\\Official\\React\\Sahjeevan-Frontend\\src\\views\\LandingPage\\LandingPage.js":"5","E:\\Official\\React\\Sahjeevan-Frontend\\src\\views\\SearchResults\\SearchResults.js":"6","E:\\Official\\React\\Sahjeevan-Frontend\\src\\views\\Interests\\Interests.js":"7","E:\\Official\\React\\Sahjeevan-Frontend\\src\\views\\Notifications\\Notifications.js":"8","E:\\Official\\React\\Sahjeevan-Frontend\\src\\views\\Account\\Account.js":"9","E:\\Official\\React\\Sahjeevan-Frontend\\src\\views\\MembershipPlans\\MembershipPlans.js":"10","E:\\Official\\React\\Sahjeevan-Frontend\\src\\views\\Home\\Home.js":"11","E:\\Official\\React\\Sahjeevan-Frontend\\src\\views\\Search\\Search.js":"12","E:\\Official\\React\\Sahjeevan-Frontend\\src\\views\\Profile\\Profile.js":"13","E:\\Official\\React\\Sahjeevan-Frontend\\src\\views\\EditProfile\\EditProfile.js":"14","E:\\Official\\React\\Sahjeevan-Frontend\\src\\services\\profile.js":"15","E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\index.js":"16","E:\\Official\\React\\Sahjeevan-Frontend\\src\\services\\api.js":"17","E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\Layout.js":"18","E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\MembershipCard.js":"19","E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\ProfileCard\\ProfileCard.js":"20","E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\SmallCard\\SmallCard.js":"21","E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\Filter\\Filter.js":"22","E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\ListOptions\\ListOptions.js":"23","E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\Forms\\RegisterForm.js":"24","E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\CardCarousel\\CardCarousel.js":"25","E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\Forms\\LandingForm.js":"26","E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\Forms\\OTPForm.js":"27","E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\Forms\\LoginForm.js":"28","E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\Forms\\HomeForm.js":"29","E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\Dialog\\Dialog.js":"30","E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\Forms\\StepForm.js":"31","E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\Footer\\Footer.js":"32","E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\Header\\Header.js":"33","E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\Hero\\LandingPage\\Hero.js":"34","E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\Hero\\LandingPage\\HeroBanner.js":"35","E:\\Official\\React\\Sahjeevan-Frontend\\src\\RoutesGuard.js":"36","E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\DrawerContent\\DrawerContent.js":"37","E:\\Official\\React\\Sahjeevan-Frontend\\src\\hooks\\snackBarHook.js":"38","E:\\Official\\React\\Sahjeevan-Frontend\\src\\hooks\\SnackBarHook.js":"39","E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\snackBar.js":"40"},{"size":790,"mtime":1616150103749,"results":"41","hashOfConfig":"42"},{"size":1680,"mtime":1616183210589,"results":"43","hashOfConfig":"42"},{"size":375,"mtime":1615270281250,"results":"44","hashOfConfig":"42"},{"size":648,"mtime":1615270281266,"results":"45","hashOfConfig":"42"},{"size":8169,"mtime":1615270281258,"results":"46","hashOfConfig":"42"},{"size":2370,"mtime":1616181866034,"results":"47","hashOfConfig":"42"},{"size":4600,"mtime":1616225223566,"results":"48","hashOfConfig":"42"},{"size":3571,"mtime":1615270281261,"results":"49","hashOfConfig":"42"},{"size":3167,"mtime":1615270281253,"results":"50","hashOfConfig":"42"},{"size":6118,"mtime":1615270281259,"results":"51","hashOfConfig":"42"},{"size":12596,"mtime":1616225272570,"results":"52","hashOfConfig":"42"},{"size":24318,"mtime":1616175721378,"results":"53","hashOfConfig":"42"},{"size":18177,"mtime":1615270281262,"results":"54","hashOfConfig":"42"},{"size":18183,"mtime":1615270281254,"results":"55","hashOfConfig":"42"},{"size":5113,"mtime":1616225223564,"results":"56","hashOfConfig":"42"},{"size":849,"mtime":1615270281247,"results":"57","hashOfConfig":"42"},{"size":1989,"mtime":1616168635948,"results":"58","hashOfConfig":"42"},{"size":690,"mtime":1615270281241,"results":"59","hashOfConfig":"42"},{"size":1323,"mtime":1615270281244,"results":"60","hashOfConfig":"42"},{"size":7501,"mtime":1616182707658,"results":"61","hashOfConfig":"42"},{"size":1436,"mtime":1616225275314,"results":"62","hashOfConfig":"42"},{"size":13025,"mtime":1616184438563,"results":"63","hashOfConfig":"42"},{"size":748,"mtime":1615270281242,"results":"64","hashOfConfig":"42"},{"size":5648,"mtime":1615990514220,"results":"65","hashOfConfig":"42"},{"size":1519,"mtime":1615810030054,"results":"66","hashOfConfig":"42"},{"size":6280,"mtime":1616225200564,"results":"67","hashOfConfig":"42"},{"size":2201,"mtime":1616221061645,"results":"68","hashOfConfig":"42"},{"size":2567,"mtime":1616148880089,"results":"69","hashOfConfig":"42"},{"size":2920,"mtime":1616073109882,"results":"70","hashOfConfig":"42"},{"size":2115,"mtime":1615984808403,"results":"71","hashOfConfig":"42"},{"size":25237,"mtime":1616224475539,"results":"72","hashOfConfig":"42"},{"size":6239,"mtime":1616224176661,"results":"73","hashOfConfig":"42"},{"size":6003,"mtime":1616220094220,"results":"74","hashOfConfig":"42"},{"size":373,"mtime":1615270281239,"results":"75","hashOfConfig":"42"},{"size":438,"mtime":1615270281240,"results":"76","hashOfConfig":"42"},{"size":368,"mtime":1616087704539,"results":"77","hashOfConfig":"42"},{"size":2851,"mtime":1616224475539,"results":"78","hashOfConfig":"42"},{"size":183,"mtime":1616149844988,"results":"79","hashOfConfig":"42"},{"size":183,"mtime":1616149844988,"results":"80","hashOfConfig":"42"},{"size":671,"mtime":1616178127968,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"1ngd29q",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"84"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"84"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":4,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"84"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"84"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Official\\React\\Sahjeevan-Frontend\\src\\index.js",[],["172","173"],"E:\\Official\\React\\Sahjeevan-Frontend\\src\\Routes.js",[],"E:\\Official\\React\\Sahjeevan-Frontend\\src\\reportWebVitals.js",[],"E:\\Official\\React\\Sahjeevan-Frontend\\src\\views\\index.js",[],"E:\\Official\\React\\Sahjeevan-Frontend\\src\\views\\LandingPage\\LandingPage.js",[],"E:\\Official\\React\\Sahjeevan-Frontend\\src\\views\\SearchResults\\SearchResults.js",["174","175","176"],"import React, { useState } from \"react\";\r\nimport { Image, Row } from \"react-bootstrap\";\r\nimport { Layout, ProfileCard, ListOptions, Filter } from \"../../components\";\r\nimport \"./SearchResults.scss\";\r\n\r\nimport heroImg from \"../../assets/images/SearchResults/hero.png\";\r\nimport { getFilter } from \"../../services/profile\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nfunction SearchResults() {\r\n  const [profiles, setProfiles] = useState([]),\r\n    heroData = {\r\n      subtitle:\r\n        \"Lorem Ipsum is simply the dummy text for printing and typesetting industry.\",\r\n      title: \"Search Results\",\r\n      isSmallBanner: true,\r\n      isLoggedIn: true\r\n    },\r\n    obj = {\r\n      birth_date: \"2021-02-09\",\r\n      caste: \"96 kuli Maratha\",\r\n      height: 5.5,\r\n      interest_status: \"Cancel Interest\",\r\n      last_seen: \"2021-02-09T04:48:12Z\",\r\n      location: \"Thane\",\r\n      marital_status: \"Never Married\",\r\n      mother_tongue: \"Marathi\",\r\n      occupation: \"Government sector\",\r\n      preference_match: \"12/20\",\r\n      profile: \"Shrutika B\",\r\n      profile_id: \"S_EYTCBK\",\r\n      profile_photo_url: \"\",\r\n      religion: \"Hindu\",\r\n      total_photos: 9\r\n    };\r\n  return (\r\n    <Layout heroImg={heroImg} heroData={heroData}>\r\n      <section className=\"results col-lg-10 col-12\">\r\n        <Row className=\"results__section m-0\">\r\n          <div className=\"results__section__filter d-none d-xl-block\">\r\n            <Filter data={getFilter()} setProfiles={setProfiles} />\r\n          </div>\r\n          <div className=\"results__section__content\">\r\n            <p className=\"results__section__content__title\">\r\n              Lorem Ipsum is simply dummy\r\n            </p>\r\n            <p className=\"results__section__content__subtitle\">\r\n              Lorem Ipsum is simply dummy text of the printing and typesetting\r\n              industry.\r\n            </p>\r\n            <div className=\"results__section__content__cards\">\r\n              {profiles?.map(profile => (\r\n                <ProfileCard card={profile} />\r\n              ))}\r\n            </div>\r\n            <Pagination\r\n              className=\"d-flex justify-content-end results__section__content__pagination\"\r\n              count={profiles?.length}\r\n              size=\"large\"\r\n            />\r\n          </div>\r\n        </Row>\r\n      </section>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default SearchResults;\r\n","E:\\Official\\React\\Sahjeevan-Frontend\\src\\views\\Interests\\Interests.js",["177","178","179","180","181","182"],"import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport \"./Interests.scss\";\r\nimport { Layout, ListOptions, ProfileCard } from \"../../components\";\r\nimport { Row, Spinner } from \"react-bootstrap\";\r\n\r\nimport Hero from \"../../assets/images/Interests/hero.png\";\r\nimport profileImage1 from \"../../assets/images/demo2.png\";\r\nimport profileImage2 from \"../../assets/images/demo8.png\";\r\nimport profileImage3 from \"../../assets/images/demo7.png\";\r\nimport profileImage4 from \"../../assets/images/demo6.png\";\r\nimport AcceptedBYMe from \"../../assets/icons/svg icon/Accepted by me.svg\";\r\nimport Heart from \"../../assets/icons/svg icon/heart.svg\";\r\nimport Messages from \"../../assets/icons/svg icon/Messages.svg\";\r\nimport Received from \"../../assets/icons/svg icon/Received interests1.svg\";\r\nimport Sent from \"../../assets/icons/svg icon/Sent interests.svg\";\r\nimport Team from \"../../assets/icons/svg icon/team.svg\";\r\nimport Viewed from \"../../assets/icons/svg icon/Viewed profiles.svg\";\r\nimport {\r\n  receivedInterests,\r\n  sentInterests,\r\n  shortlisted,\r\n  viewedProfiles,\r\n  acceptedByMe,\r\n  acceptedByOthers\r\n} from \"../../services/profile\";\r\n\r\nfunction Interests() {\r\n  const heroData = {\r\n      title: \"Interests\",\r\n      subtitle:\r\n        \"Lorem ipsum is simply dummy text of the printing and typesetting industry.\",\r\n      isLoggedIn: true,\r\n      isSmallBanner: true\r\n    },\r\n    listText = {\r\n      viewedProfiles: \"Viewed Profiles\",\r\n      acceptedByMe: \"Accepted By me\",\r\n      messages: \"Messages\",\r\n      receivedInterests: \"Received Interests\",\r\n      sentInterests: \"Sent interests\",\r\n      shortlisted: \"Shortlisted\",\r\n      acceptedByOthers: \"Accepted By others\"\r\n    },\r\n    listOptions = [\r\n      {\r\n        icon: Viewed,\r\n        text: listText.viewedProfiles,\r\n        queryFn: viewedProfiles\r\n      },\r\n      {\r\n        icon: AcceptedBYMe,\r\n        text: listText.acceptedByMe,\r\n        queryFn: acceptedByMe\r\n      },\r\n      {\r\n        icon: Messages,\r\n        text: listText.messages\r\n      },\r\n      {\r\n        icon: Received,\r\n        text: listText.receivedInterests,\r\n        queryFn: receivedInterests\r\n      },\r\n      {\r\n        icon: Sent,\r\n        text: listText.sentInterests,\r\n        queryFn: sentInterests\r\n      },\r\n      {\r\n        icon: Team,\r\n        text: listText.shortlisted,\r\n        queryFn: shortlisted\r\n      },\r\n      {\r\n        icon: Heart,\r\n        text: listText.acceptedByOthers,\r\n        queryFn: acceptedByOthers\r\n      }\r\n    ],\r\n    [optionSelected, setOptionSelected] = useState(1),\r\n    checkSelected = index => {\r\n      return optionSelected === index;\r\n    },\r\n    getIndex = text => {\r\n      return listOptions.findIndex(c => c.text === text) + 1; // index of list starts at 1\r\n    },\r\n    { data: cards, refetch, isLoading: loading } = useQuery(\r\n      {\r\n        queryKey: listOptions[optionSelected - 1].text,\r\n        queryFn: listOptions[optionSelected - 1].queryFn || null\r\n      },\r\n      { refetchOnWindowFocus: false }\r\n    );\r\n\r\n  useEffect(() => {\r\n    refetch();\r\n  }, [optionSelected]);\r\n\r\n  return (\r\n    <Layout heroData={heroData} heroImg={Hero}>\r\n      <section className=\"interests col-lg-10 col-12\">\r\n        <Row className=\"interests__section\">\r\n          <div className=\"interests__section__filter\">\r\n            <ListOptions\r\n              options={listOptions}\r\n              active={optionSelected}\r\n              activeChange={setOptionSelected}\r\n            ></ListOptions>\r\n          </div>\r\n          <div className=\"interests__section__content col-sm-12\">\r\n            <p className=\"interests__section__content__title\">\r\n              Lorem Ipsum is simply dummy\r\n            </p>\r\n            <p className=\"interests__section__content__subtitle\">\r\n              Lorem Ipsum is simply dummy text of the printing and typesetting\r\n              industry.\r\n            </p>\r\n            <div className=\"interests__section__content__cards\">\r\n              {cards?.results?.map(card => (\r\n                <ProfileCard\r\n                  key={card?.profile_id}\r\n                  isPremium={true}\r\n                  profileImage={profileImage1}\r\n                  card={{ ...card, name: card?.from_user }}\r\n                ></ProfileCard>\r\n              ))}\r\n              {loading && <Spinner animation=\"border\" />}\r\n              {!cards?.results?.length && !loading && (\r\n                <p>No {listOptions[optionSelected - 1].text} found.</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Row>\r\n      </section>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Interests;\r\n","E:\\Official\\React\\Sahjeevan-Frontend\\src\\views\\Notifications\\Notifications.js",[],"E:\\Official\\React\\Sahjeevan-Frontend\\src\\views\\Account\\Account.js",[],"E:\\Official\\React\\Sahjeevan-Frontend\\src\\views\\MembershipPlans\\MembershipPlans.js",[],"E:\\Official\\React\\Sahjeevan-Frontend\\src\\views\\Home\\Home.js",["183"],"import React, { useState } from \"react\";\r\nimport { Layout, CardCarousel, HomeForm } from \"../../components\";\r\nimport { Image, Card } from \"react-bootstrap\";\r\nimport \"./Home.scss\";\r\nimport { useQuery } from \"react-query\";\r\n\r\nimport Hero from \"../../assets/images/Home/home.png\";\r\nimport FooterLogo from \"../../assets/images/logo1.png\";\r\nimport Left from \"../../assets/icons/svg icon/Right1.svg\";\r\nimport Right from \"../../assets/icons/svg icon/Stroke 1.svg\";\r\nimport RightRedArrow from \"../../assets/icons/svg icon/arrow-1.svg\";\r\nimport RightWhiteArrow from \"../../assets/icons/svg icon/arrow.svg\";\r\nimport {\r\n  premiumMatches,\r\n  profileVisitors,\r\n  nearbyMatches,\r\n  dailyRecommendations\r\n} from \"../../services/profile\";\r\n\r\nfunction Home() {\r\n  const cards = [\r\n      {\r\n        title: \"28, 5' 0'', Delhi and allahabad, Uttarpradesh\",\r\n        language: \"Hindi-Delhi, kashmiri\",\r\n        education: \"M.Com, other\",\r\n        profession: \"Rs 2 - 3 Lakh, BPO/ITES Profession\",\r\n        pictureCount: 3\r\n      },\r\n      {\r\n        title: \"28, 5' 0'', Delhi and allahabad, Uttarpradesh\",\r\n        language: \"Hindi-Delhi, kashmiri\",\r\n        education: \"M.Com, other\",\r\n        profession: \"Rs 2 - 3 Lakh, BPO/ITES Profession\",\r\n        pictureCount: 3\r\n      },\r\n      {\r\n        title: \"28, 5' 0'', Delhi and allahabad, Uttarpradesh\",\r\n        language: \"Hindi-Delhi, kashmiri\",\r\n        education: \"M.Com, other\",\r\n        profession: \"Rs 2 - 3 Lakh, BPO/ITES Profession\",\r\n        pictureCount: 2\r\n      },\r\n      {\r\n        title: \"28, 5' 0'', Delhi and allahabad, Uttarpradesh\",\r\n        language: \"Hindi-Delhi, kashmiri\",\r\n        education: \"M.Com, other\",\r\n        profession: \"Rs 2 - 3 Lakh, BPO/ITES Profession\",\r\n        pictureCount: 4\r\n      }\r\n    ],\r\n    heroData = {\r\n      isLoggedIn: true,\r\n      title: \"Lorem ipsum is simply dummy text of the printing.\",\r\n      subtitle:\r\n        \"Lorem ipsum is simply dummy text for printing and typesetting industry. Loreum ipsum has been the industry's.\",\r\n      btnText: \"Upgrade\"\r\n    },\r\n    { data: premiumCards } = useQuery(\"premiumMatches\", premiumMatches, {\r\n      refetchOnWindowFocus: false\r\n    }),\r\n    { data: nearbyCards } = useQuery(\"nearbyMatches\", nearbyMatches, {\r\n      refetchOnWindowFocus: false\r\n    }),\r\n    { data: dailyRecommendationsCards } = useQuery(\r\n      \"dailyRecommendations\",\r\n      dailyRecommendations,\r\n      {\r\n        refetchOnWindowFocus: false\r\n      }\r\n    ),\r\n    { data: profileVisitorsCards } = useQuery(\r\n      \"profileVisitorsCards\",\r\n      profileVisitors,\r\n      { refetchOnWindowFocus: false }\r\n    ),\r\n    [visitorIndex, setVisitorIndex] = useState(0),\r\n    [nearByIndex, setNearByIndex] = useState(0),\r\n    [recommendationIndex, setRecommendationIndex] = useState(0),\r\n    [premiumIndex, setPremiumIndex] = useState(0);\r\n\r\n  return (\r\n    <Layout heroImg={Hero} heroData={heroData} bannerContent={<HomeForm />}>\r\n      <section className=\"section col-lg-10 col-12\">\r\n        <div className=\"section__header\">\r\n          <div className=\"section__header__title\">\r\n            <p className=\"section__header__title__text\">\r\n              My Profile Visitors\r\n              <span className=\"section__header__title__text__count\">\r\n                {profileVisitorsCards?.results?.length}\r\n              </span>\r\n            </p>\r\n            <p className=\"section__header__title__subtext\">\r\n              Lorem Ipsum is simply dummy text of the printing and typesetting\r\n              industry.\r\n            </p>\r\n          </div>\r\n          <div className=\"section__header__actions\">\r\n            <button\r\n              className=\"section__header__actions__left\"\r\n              onClick={() =>\r\n                setVisitorIndex(\r\n                  visitorIndex > 0 ? visitorIndex - 1 : visitorIndex\r\n                )\r\n              }\r\n            >\r\n              <Image src={Left} alt=\"left icon\" height=\"15\" />\r\n            </button>\r\n            <button\r\n              className=\"section__header__actions__right\"\r\n              onClick={() =>\r\n                setVisitorIndex(\r\n                  visitorIndex < 1 ? visitorIndex + 1 : visitorIndex\r\n                )\r\n              }\r\n            >\r\n              <Image src={Right} alt=\"right icon\" height=\"15\" />\r\n            </button>\r\n            <button className=\"section__header__actions__all\">\r\n              <span className=\"section__header__actions__all__text\">\r\n                View All\r\n              </span>\r\n              <Image\r\n                src={RightRedArrow}\r\n                alt=\"right arrow\"\r\n                className=\"section__header__actions__all__redicon\"\r\n              />\r\n              <Image\r\n                src={RightWhiteArrow}\r\n                alt=\"right arrow\"\r\n                className=\"section__header__actions__all__whiteicon\"\r\n              />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"section__cards\">\r\n          <CardCarousel\r\n            cards={profileVisitorsCards?.results}\r\n            activeIndex={visitorIndex}\r\n          ></CardCarousel>\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"section col-lg-10 col-12\">\r\n        <div className=\"section__header\">\r\n          <div className=\"section__header__title\">\r\n            <p className=\"section__header__title__text\">\r\n              Nearby Matches\r\n              <span className=\"section__header__title__text__count\">\r\n                {nearbyCards?.count}\r\n              </span>\r\n            </p>\r\n            <p className=\"section__header__title__subtext\">\r\n              Lorem Ipsum is simply dummy text of the printing and typesetting\r\n              industry.\r\n            </p>\r\n          </div>\r\n          <div className=\"section__header__actions\">\r\n            <button\r\n              className=\"section__header__actions__left\"\r\n              onClick={() =>\r\n                setNearByIndex(nearByIndex > 0 ? nearByIndex - 1 : nearByIndex)\r\n              }\r\n            >\r\n              <Image src={Left} alt=\"left icon\" height=\"15\" />\r\n            </button>\r\n            <button\r\n              className=\"section__header__actions__right\"\r\n              onClick={() =>\r\n                setNearByIndex(nearByIndex < 1 ? nearByIndex + 1 : nearByIndex)\r\n              }\r\n            >\r\n              <Image src={Right} alt=\"right icon\" height=\"15\" />\r\n            </button>\r\n            <button className=\"section__header__actions__all\">\r\n              <span className=\"section__header__actions__all__text\">\r\n                View All\r\n              </span>\r\n              <Image\r\n                src={RightRedArrow}\r\n                alt=\"right arrow\"\r\n                className=\"section__header__actions__all__redicon\"\r\n              />\r\n              <Image\r\n                src={RightWhiteArrow}\r\n                alt=\"right arrow\"\r\n                className=\"section__header__actions__all__whiteicon\"\r\n              />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"section__cards\">\r\n          <CardCarousel\r\n            cards={nearbyCards?.results}\r\n            activeIndex={nearByIndex}\r\n          ></CardCarousel>\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"section col-lg-10 col-12\">\r\n        <div className=\"section__header\">\r\n          <div className=\"section__header__title\">\r\n            <p className=\"section__header__title__text\">\r\n              Daily Recommendations\r\n              <span className=\"section__header__title__text__count\">24</span>\r\n            </p>\r\n            <p className=\"section__header__title__subtext\">\r\n              Lorem Ipsum is simply dummy text of the printing and typesetting\r\n              industry.\r\n            </p>\r\n          </div>\r\n          <div className=\"section__header__actions\">\r\n            <button\r\n              className=\"section__header__actions__left\"\r\n              onClick={() =>\r\n                setRecommendationIndex(\r\n                  recommendationIndex > 0\r\n                    ? recommendationIndex - 1\r\n                    : recommendationIndex\r\n                )\r\n              }\r\n            >\r\n              <Image src={Left} alt=\"left icon\" height=\"15\" />\r\n            </button>\r\n            <button\r\n              className=\"section__header__actions__right\"\r\n              onClick={() =>\r\n                setRecommendationIndex(\r\n                  recommendationIndex < 1\r\n                    ? recommendationIndex + 1\r\n                    : recommendationIndex\r\n                )\r\n              }\r\n            >\r\n              <Image src={Right} alt=\"right icon\" height=\"15\" />\r\n            </button>\r\n            <button className=\"section__header__actions__all\">\r\n              <span className=\"section__header__actions__all__text\">\r\n                View All\r\n              </span>\r\n              <Image\r\n                src={RightRedArrow}\r\n                alt=\"right arrow\"\r\n                className=\"section__header__actions__all__redicon\"\r\n              />\r\n              <Image\r\n                src={RightWhiteArrow}\r\n                alt=\"right arrow\"\r\n                className=\"section__header__actions__all__whiteicon\"\r\n              />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"section__cards\">\r\n          <CardCarousel\r\n            cards={dailyRecommendationsCards?.results}\r\n            activeIndex={recommendationIndex}\r\n          ></CardCarousel>\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"section col-lg-10 col-12\">\r\n        <div className=\"section__header\">\r\n          <div className=\"section__header__title\">\r\n            <p className=\"section__header__title__text\">\r\n              Premium Matches\r\n              <span className=\"section__header__title__text__count\">\r\n                {premiumCards?.results?.length}\r\n              </span>\r\n            </p>\r\n            <p className=\"section__header__title__subtext\">\r\n              Lorem Ipsum is simply dummy text of the printing and typesetting\r\n              industry.\r\n            </p>\r\n          </div>\r\n          <div className=\"section__header__actions\">\r\n            <button\r\n              className=\"section__header__actions__left\"\r\n              onClick={() =>\r\n                setPremiumIndex(\r\n                  premiumIndex > 0 ? premiumIndex - 1 : premiumIndex\r\n                )\r\n              }\r\n            >\r\n              <Image src={Left} alt=\"left icon\" height=\"15\" />\r\n            </button>\r\n            <button\r\n              className=\"section__header__actions__right\"\r\n              onClick={() =>\r\n                setPremiumIndex(\r\n                  premiumIndex < 1 ? premiumIndex + 1 : premiumIndex\r\n                )\r\n              }\r\n            >\r\n              <Image src={Right} alt=\"right icon\" height=\"15\" />\r\n            </button>\r\n            <button className=\"section__header__actions__all\">\r\n              <span className=\"section__header__actions__all__text\">\r\n                View All\r\n              </span>\r\n              <Image\r\n                src={RightRedArrow}\r\n                alt=\"right arrow\"\r\n                className=\"section__header__actions__all__redicon\"\r\n              />\r\n              <Image\r\n                src={RightWhiteArrow}\r\n                alt=\"right arrow\"\r\n                className=\"section__header__actions__all__whiteicon\"\r\n              />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"section__cards\">\r\n          <CardCarousel\r\n            cards={premiumCards?.results}\r\n            activeIndex={premiumIndex}\r\n          ></CardCarousel>\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"info col-12\">\r\n        <Card className=\"info__card col-lg-9 col-md-9 col-sm-10\">\r\n          <Image\r\n            src={FooterLogo}\r\n            className=\"info__card__img col-lg-3 col-md-4 col-sm-5\"\r\n            alt=\"logo\"\r\n          />\r\n          <p className=\"info__card__text\">\r\n            Lorem Ipsum is simply dummy text of the printing and typesetting\r\n            industry. Lorem Ipsum has been the industry's standard dummy text\r\n            ever since the 1500s, when an unknown printer took a gallery of type\r\n            and scrambled it to make a type specimen book. It has survived not\r\n            only five centuries, but also the leap into electronic typesetting,\r\n            remaining essentially unchanged. It was popularised in the 1960s\r\n            with the release of Letraset sheets containing.\r\n          </p>\r\n        </Card>\r\n      </section>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","E:\\Official\\React\\Sahjeevan-Frontend\\src\\views\\Search\\Search.js",["184","185","186","187"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Form, Image, Button } from \"react-bootstrap\";\r\nimport {\r\n  RadioGroup,\r\n  Radio,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Select,\r\n  MenuItem,\r\n  Chip,\r\n  Input,\r\n  TextField\r\n} from \"@material-ui/core\";\r\n\r\nimport \"./Search.scss\";\r\nimport { Layout } from \"../../components\";\r\nimport Hero from \"../../assets/images/Search/hero.png\";\r\nimport SaveSearch from \"../../assets/icons/svg icon/search-interface-symbol.svg\";\r\nimport Save from \"../../assets/icons/svg icon/save-file.svg\";\r\nimport { getOptions, saveFilter } from \"../../services/profile\";\r\n\r\nfunction Search() {\r\n  const [formData, setFormData] = useState({\r\n      location: [],\r\n      marital_status: [],\r\n      caste: [],\r\n      mother_tongue: [],\r\n      occupation: [],\r\n      qualification: [],\r\n      income: []\r\n    }),\r\n    heroData = {\r\n      title: \"Search Now\",\r\n      subtitle:\r\n        \"Lorem Ipsum is simply dummy text of the printing and typesetting industry.\",\r\n      isLoggedIn: true,\r\n      isSmallBanner: true\r\n    },\r\n    history = useHistory(),\r\n    handleChange = newValue => {\r\n      setFormData({ ...formData, ...newValue });\r\n    },\r\n    { data: Options, isSuccess: OptionsSuccess } = useQuery(\r\n      \"getOptions\",\r\n      getOptions,\r\n      {\r\n        refetchOnWindowFocus: false\r\n      }\r\n    ),\r\n    handleChipDelete = (name, deleteKey) => {\r\n      setFormData({\r\n        ...formData,\r\n        [name]: formData[name].filter(({ key }) => key !== deleteKey)\r\n      });\r\n    },\r\n    getKeysArr = arr => {\r\n      return arr.map(a => a.key);\r\n    },\r\n    handleSubmit = e => {\r\n      e.preventDefault();\r\n      saveFilter({\r\n        ...formData,\r\n        marital_status: getKeysArr(formData.marital_status),\r\n        location: getKeysArr(formData.location),\r\n        mother_tongue: getKeysArr(formData.mother_tongue),\r\n        occupation: getKeysArr(formData.occupation),\r\n        qualification: getKeysArr(formData.qualification),\r\n        income: getKeysArr(formData.income),\r\n        caste: getKeysArr(formData.caste),\r\n        religion: formData.religion.key\r\n      });\r\n      history.push(\"/searchresults\");\r\n    };\r\n\r\n  useEffect(() => {\r\n    OptionsSuccess && setFormData({\r\n      gender: Options?.results?.gender[0].key,\r\n      age: {\r\n        from: 18,\r\n        to: 18\r\n      },\r\n      religion: Options?.results?.religion[0],\r\n      height: {\r\n        from: Options?.results?.height[0].key,\r\n        to: Options?.results?.height[0].key\r\n      },\r\n      location: [Options?.results?.location[0]],\r\n      marital_status: [Options?.results?.marital_status[0]],\r\n      caste: [],\r\n      mother_tongue: [Options?.results?.mother_tongue[0]],\r\n      occupation: [Options?.results?.occupation[0]],\r\n      qualification: [Options?.results?.qualification[0]],\r\n      income: [Options?.results?.income[0]]\r\n    });\r\n  }, [OptionsSuccess]);\r\n  return (\r\n    <Layout heroImg={Hero} heroData={heroData}>\r\n      <section className=\"search col-lg-9 col-md-12 col-sm-12\">\r\n        <div className=\"search__header\">\r\n          <p className=\"search__header__title\">Lorem Ipsum is simply dummy</p>\r\n          <p className=\"search__header__subtitle\">\r\n            Lorem Ipsum is simply dummy text of the printing and typesetting\r\n            industry.\r\n          </p>\r\n        </div>\r\n        <div className=\"search__form\">\r\n          <Form onSubmit={handleSubmit}>\r\n            <div className=\"search__form__controls\">\r\n              <div className=\"search__form__controls__group mb-3\">\r\n                <p className=\"search__form__controls__group__label\">\r\n                  Looking For\r\n                </p>\r\n                <div className=\"search__form__controls__group__wrapper\">\r\n                  <FormControl component=\"fieldset\">\r\n                    <RadioGroup\r\n                      row\r\n                      aria-label=\"gender\"\r\n                      name=\"gender\"\r\n                      value={+formData?.gender}\r\n                      onChange={({ target: { name, value } }) =>\r\n                        handleChange({ [name]: value })\r\n                      }\r\n                    >\r\n                      {Options?.results?.gender.map(gen => (\r\n                        <FormControlLabel\r\n                          value={gen.key}\r\n                          control={<Radio color=\"primary\" />}\r\n                          label={gen.value}\r\n                        />\r\n                      ))}\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                </div>\r\n              </div>\r\n              <div className=\"search__form__controls__group mb-3\">\r\n                <p className=\"search__form__controls__group__label\">Age</p>\r\n                <div className=\"search__form__controls__group__wrapper\">\r\n                  <TextField\r\n                    type=\"number\"\r\n                    InputProps={{ inputProps: { min: 18 } }}\r\n                    value={formData?.age?.from}\r\n                    name=\"from\"\r\n                    className=\"search__form__controls__group__wrapper__control w-100\"\r\n                    onChange={({ target: { name, value } }) =>\r\n                      handleChange({\r\n                        age: { ...formData?.age, [name]: +value }\r\n                      })\r\n                    }\r\n                  />\r\n\r\n                  <TextField\r\n                    type=\"number\"\r\n                    InputProps={{ inputProps: { min: 18 } }}\r\n                    value={formData?.age?.to}\r\n                    name=\"to\"\r\n                    className=\"search__form__controls__group__wrapper__control w-100\"\r\n                    onChange={({ target: { name, value } }) =>\r\n                      handleChange({\r\n                        age: { ...formData?.age, [name]: +value }\r\n                      })\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"search__form__controls__group  mb-3\">\r\n                <p className=\"search__form__controls__group__label\">Location</p>\r\n                <div className=\"search__form__controls__group__wrapper\">\r\n                  <Select\r\n                    labelId=\"location\"\r\n                    className=\"w-100 my-2\"\r\n                    id=\"location\"\r\n                    name=\"location\"\r\n                    multiple\r\n                    value={formData?.location}\r\n                    onChange={({ target: { name, value } }) =>\r\n                      handleChange({ [name]: value })\r\n                    }\r\n                    input={<Input id=\"select-location\" />}\r\n                    renderValue={selected => (\r\n                      <div>\r\n                        {selected?.map(select => (\r\n                          <Chip\r\n                            className=\"m-2\"\r\n                            variant=\"outlined\"\r\n                            key={select?.key}\r\n                            clickable\r\n                            value={select?.key}\r\n                            label={select?.value}\r\n                            onDelete={() =>\r\n                              handleChipDelete(\"location\", select?.key)\r\n                            }\r\n                            deleteIcon={\r\n                              <span\r\n                                class=\"text-dark\"\r\n                                onMouseDown={event => event.stopPropagation()}\r\n                              >\r\n                                &#10005;\r\n                              </span>\r\n                            }\r\n                          />\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                  >\r\n                    {Options?.results?.location.map(location => (\r\n                      <MenuItem key={location.key} value={location}>\r\n                        {location.value}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n              </div>\r\n              <div className=\"search__form__controls__group mb-3\">\r\n                <p className=\"search__form__controls__group__label\">Height</p>\r\n                <div className=\"search__form__controls__group__wrapper\">\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    value={+formData?.height?.from}\r\n                    name=\"from\"\r\n                    className=\"search__form__controls__group__wrapper__control w-100\"\r\n                    onChange={({ target: { name, value } }) =>\r\n                      handleChange({\r\n                        height: { ...formData?.height, [name]: value }\r\n                      })\r\n                    }\r\n                  >\r\n                    {Options?.results?.height.map(height => (\r\n                      <MenuItem key={height.key} value={height.key}>\r\n                        {height.value}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n\r\n                  <Select\r\n                    name=\"to\"\r\n                    className=\"search__form__controls__group__wrapper__control w-100\"\r\n                    value={+formData?.height?.to}\r\n                    onChange={({ target: { name, value } }) =>\r\n                      handleChange({\r\n                        height: { ...formData?.height, [name]: value }\r\n                      })\r\n                    }\r\n                  >\r\n                    {Options?.results?.height.map(height => (\r\n                      <MenuItem key={height.key} value={height.key}>\r\n                        {height.value}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n              </div>\r\n              <div className=\"search__form__controls__group  mb-3\">\r\n                <p className=\"search__form__controls__group__label\">\r\n                  Marital Status\r\n                </p>\r\n                <div className=\"search__form__controls__group__wrapper\">\r\n                  <Select\r\n                    labelId=\"marital_status\"\r\n                    className=\"w-100 my-2\"\r\n                    id=\"marital_status\"\r\n                    name=\"marital_status\"\r\n                    multiple\r\n                    value={formData?.marital_status}\r\n                    onChange={({ target: { name, value } }) =>\r\n                      handleChange({ [name]: value })\r\n                    }\r\n                    input={<Input id=\"select-marital_status\" />}\r\n                    renderValue={selected => (\r\n                      <div>\r\n                        {selected?.map(select => (\r\n                          <Chip\r\n                            className=\"m-2\"\r\n                            variant=\"outlined\"\r\n                            key={select?.key}\r\n                            clickable\r\n                            value={select?.key}\r\n                            label={select?.value}\r\n                            onDelete={() =>\r\n                              handleChipDelete(\"marital_status\", select?.key)\r\n                            }\r\n                            deleteIcon={\r\n                              <span\r\n                                class=\"text-dark\"\r\n                                onMouseDown={event => event.stopPropagation()}\r\n                              >\r\n                                &#10005;\r\n                              </span>\r\n                            }\r\n                          />\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                  >\r\n                    {Options?.results?.marital_status.map(marital_status => (\r\n                      <MenuItem key={marital_status.key} value={marital_status}>\r\n                        {marital_status.value}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n              </div>\r\n              <div className=\"search__form__controls__group  mb-3\">\r\n                <p className=\"search__form__controls__group__label\">Religion</p>\r\n                <div className=\"search__form__controls__group__wrapper\">\r\n                  <Select\r\n                    labelId=\"religion\"\r\n                    className=\"w-100 my-2\"\r\n                    id=\"religion\"\r\n                    name=\"religion\"\r\n                    value={formData?.religion || ''}\r\n                    onChange={({ target: { name, value } }) =>\r\n                      handleChange({ [name]: value, caste: [] })\r\n                    }\r\n                    input={<Input id=\"select-religion\" />}\r\n                  >\r\n                    {Options?.results?.religion.map(religion => (\r\n                      <MenuItem key={religion.key} value={religion}>\r\n                        {religion.value}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n              </div>\r\n              <div className=\"search__form__controls__group  mb-3\">\r\n                <p className=\"search__form__controls__group__label\">Caste</p>\r\n                <div className=\"search__form__controls__group__wrapper\">\r\n                  <Select\r\n                    labelId=\"caste\"\r\n                    className=\"w-100 my-2\"\r\n                    id=\"caste\"\r\n                    name=\"caste\"\r\n                    disabled={!formData.religion}\r\n                    multiple\r\n                    value={formData?.caste}\r\n                    onChange={({ target: { name, value } }) =>\r\n                      handleChange({ [name]: value })\r\n                    }\r\n                    input={<Input id=\"select-caste\" />}\r\n                    renderValue={selected => (\r\n                      <div>\r\n                        {!!formData.religion &&\r\n                          selected?.map(select => (\r\n                            <Chip\r\n                              className=\"m-2\"\r\n                              variant=\"outlined\"\r\n                              key={select?.key}\r\n                              clickable\r\n                              value={select?.key}\r\n                              label={select?.value}\r\n                              onDelete={() =>\r\n                                handleChipDelete(\"caste\", select?.key)\r\n                              }\r\n                              deleteIcon={\r\n                                <span\r\n                                  class=\"text-dark\"\r\n                                  onMouseDown={event => event.stopPropagation()}\r\n                                >\r\n                                  &#10005;\r\n                                </span>\r\n                              }\r\n                            />\r\n                          ))}\r\n                      </div>\r\n                    )}\r\n                  >\r\n                    {formData?.religion &&\r\n                      Options?.results?.caste[formData?.religion?.value].map(\r\n                        caste => (\r\n                          <MenuItem key={caste.key} value={caste}>\r\n                            {caste.value}\r\n                          </MenuItem>\r\n                        )\r\n                      )}\r\n                  </Select>\r\n                </div>\r\n              </div>\r\n              <div className=\"search__form__controls__group  mb-3\">\r\n                <p className=\"search__form__controls__group__label\">\r\n                  Mother Tongue\r\n                </p>\r\n                <div className=\"search__form__controls__group__wrapper\">\r\n                  <Select\r\n                    labelId=\"mother_tongue\"\r\n                    className=\"w-100 my-2\"\r\n                    id=\"mother_tongue\"\r\n                    name=\"mother_tongue\"\r\n                    multiple\r\n                    value={formData?.mother_tongue}\r\n                    onChange={({ target: { name, value } }) =>\r\n                      handleChange({ [name]: value })\r\n                    }\r\n                    input={<Input id=\"select-mother_tongue\" />}\r\n                    renderValue={selected => (\r\n                      <div>\r\n                        {selected?.map(select => (\r\n                          <Chip\r\n                            className=\"m-2\"\r\n                            variant=\"outlined\"\r\n                            key={select?.key}\r\n                            clickable\r\n                            value={select?.key}\r\n                            label={select?.value}\r\n                            onDelete={() =>\r\n                              handleChipDelete(\"mother_tongue\", select?.key)\r\n                            }\r\n                            deleteIcon={\r\n                              <span\r\n                                class=\"text-dark\"\r\n                                onMouseDown={event => event.stopPropagation()}\r\n                              >\r\n                                &#10005;\r\n                              </span>\r\n                            }\r\n                          />\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                  >\r\n                    {Options?.results?.mother_tongue.map(mother_tongue => (\r\n                      <MenuItem key={mother_tongue.key} value={mother_tongue}>\r\n                        {mother_tongue.value}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n              </div>\r\n              <div className=\"search__form__controls__group  mb-3\">\r\n                <p className=\"search__form__controls__group__label\">\r\n                  Occupation\r\n                </p>\r\n                <div className=\"search__form__controls__group__wrapper\">\r\n                  <Select\r\n                    labelId=\"occupation\"\r\n                    className=\"w-100 my-2\"\r\n                    id=\"occupation\"\r\n                    name=\"occupation\"\r\n                    multiple\r\n                    value={formData?.occupation}\r\n                    onChange={({ target: { name, value } }) =>\r\n                      handleChange({ [name]: value })\r\n                    }\r\n                    input={<Input id=\"select-occupation\" />}\r\n                    renderValue={selected => (\r\n                      <div>\r\n                        {selected?.map(select => (\r\n                          <Chip\r\n                            className=\"m-2\"\r\n                            variant=\"outlined\"\r\n                            key={select?.key}\r\n                            clickable\r\n                            value={select?.key}\r\n                            label={select?.value}\r\n                            onDelete={() =>\r\n                              handleChipDelete(\"occupation\", select?.key)\r\n                            }\r\n                            deleteIcon={\r\n                              <span\r\n                                class=\"text-dark\"\r\n                                onMouseDown={event => event.stopPropagation()}\r\n                              >\r\n                                &#10005;\r\n                              </span>\r\n                            }\r\n                          />\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                  >\r\n                    {Options?.results?.occupation.map(occupation => (\r\n                      <MenuItem key={occupation.key} value={occupation}>\r\n                        {occupation.value}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n              </div>\r\n              <div className=\"search__form__controls__group  mb-3\">\r\n                <p className=\"search__form__controls__group__label\">\r\n                  Qualification\r\n                </p>\r\n                <div className=\"search__form__controls__group__wrapper\">\r\n                  <Select\r\n                    labelId=\"qualification\"\r\n                    className=\"w-100 my-2\"\r\n                    id=\"qualification\"\r\n                    name=\"qualification\"\r\n                    multiple\r\n                    value={formData?.qualification}\r\n                    onChange={({ target: { name, value } }) =>\r\n                      handleChange({ [name]: value })\r\n                    }\r\n                    input={<Input id=\"select-qualification\" />}\r\n                    renderValue={selected => (\r\n                      <div>\r\n                        {selected?.map(select => (\r\n                          <Chip\r\n                            className=\"m-2\"\r\n                            variant=\"outlined\"\r\n                            key={select?.key}\r\n                            clickable\r\n                            value={select?.key}\r\n                            label={select?.value}\r\n                            onDelete={() =>\r\n                              handleChipDelete(\"qualification\", select?.key)\r\n                            }\r\n                            deleteIcon={\r\n                              <span\r\n                                class=\"text-dark\"\r\n                                onMouseDown={event => event.stopPropagation()}\r\n                              >\r\n                                &#10005;\r\n                              </span>\r\n                            }\r\n                          />\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                  >\r\n                    {Options?.results?.qualification.map(qualification => (\r\n                      <MenuItem key={qualification.key} value={qualification}>\r\n                        {qualification.value}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n              </div>\r\n              <div className=\"search__form__controls__group  mb-3\">\r\n                <p className=\"search__form__controls__group__label\">Income</p>\r\n                <div className=\"search__form__controls__group__wrapper\">\r\n                  <Select\r\n                    labelId=\"income\"\r\n                    className=\"w-100 my-2\"\r\n                    id=\"income\"\r\n                    name=\"income\"\r\n                    multiple\r\n                    value={formData?.income}\r\n                    onChange={({ target: { name, value } }) =>\r\n                      handleChange({ [name]: value })\r\n                    }\r\n                    input={<Input id=\"select-income\" />}\r\n                    renderValue={selected => (\r\n                      <div>\r\n                        {selected?.map(select => (\r\n                          <Chip\r\n                            className=\"m-2\"\r\n                            variant=\"outlined\"\r\n                            key={select?.key}\r\n                            clickable\r\n                            value={select?.key}\r\n                            label={select?.value}\r\n                            onDelete={() =>\r\n                              handleChipDelete(\"income\", select?.key)\r\n                            }\r\n                            deleteIcon={\r\n                              <span\r\n                                class=\"text-dark\"\r\n                                onMouseDown={event => event.stopPropagation()}\r\n                              >\r\n                                &#10005;\r\n                              </span>\r\n                            }\r\n                          />\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                  >\r\n                    {Options?.results?.income.map(income => (\r\n                      <MenuItem key={income.key} value={income}>\r\n                        {income.value}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"search__form__actions\">\r\n              <Button\r\n                type=\"submit\"\r\n                className=\"search__form__actions__search\"\r\n              >\r\n                <Image src={SaveSearch} alt=\"search\" height={22} />\r\n                SEARCH\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </section>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","E:\\Official\\React\\Sahjeevan-Frontend\\src\\views\\Profile\\Profile.js",[],"E:\\Official\\React\\Sahjeevan-Frontend\\src\\views\\EditProfile\\EditProfile.js",[],"E:\\Official\\React\\Sahjeevan-Frontend\\src\\services\\profile.js",[],"E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\index.js",[],"E:\\Official\\React\\Sahjeevan-Frontend\\src\\services\\api.js",[],"E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\Layout.js",[],"E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\MembershipCard.js",[],"E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\ProfileCard\\ProfileCard.js",["188","189","190","191","192","193"],"E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\SmallCard\\SmallCard.js",[],"E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\Filter\\Filter.js",["194"],"E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\ListOptions\\ListOptions.js",["195"],"import React, { useState } from \"react\";\r\nimport \"./ListOptions.scss\";\r\nimport { ListGroup, ListGroupItem, Image } from \"react-bootstrap\";\r\n\r\nfunction ListOptions({ options, active, activeChange }) {\r\n  const itemClick = (index) => {\r\n    activeChange(index);\r\n  };\r\n  return (\r\n    <ListGroup className=\"list\">\r\n      {options.map(({ text, icon }, index) => (\r\n        <ListGroupItem\r\n          action\r\n          className={\"list__item \" + (active === index + 1 ? \"active\" : \"\")}\r\n          key={text}\r\n          onClick={() => itemClick(index + 1)}\r\n        >\r\n          <Image src={icon} height=\"25\" className=\"list__item__img\" />\r\n          {text}\r\n        </ListGroupItem>\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n}\r\n\r\nexport default ListOptions;\r\n","E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\Forms\\RegisterForm.js",["196","197","198"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./RegisterForm.scss\";\r\nimport { Button, Form, InputGroup, Spinner, Alert } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useQuery, useMutation } from \"react-query\";\r\nimport {\r\n  register,\r\n  setSession,\r\n  checkUsernameAvailability\r\n} from \"../../services/api\";\r\n\r\nfunction RegisterForm({ close }) {\r\n  const { mutate, isError, isSuccess, error, data } = useMutation(formData =>\r\n      register(formData)\r\n    ),\r\n    [formValue, setFormValue] = useState({}),\r\n    {\r\n      isError: usernameAvailabilityStatus,\r\n      refetch,\r\n      error: usernameAvailabilityData,\r\n      isSuccess: usernameAvailabilitySuccess,\r\n      isLoading: usernameAvailabilityLoading\r\n    } = useQuery(\r\n      [\"checkUsername\", formValue?.username],\r\n      () => checkUsernameAvailability(formValue?.username),\r\n      {\r\n        refetchOnWindowFocus: false,\r\n        enabled: false\r\n      }\r\n    ),\r\n    [passwordMatch, setPasswordMatch] = useState(true),\r\n    [emailError, setEmailError] = useState(\"\"),\r\n    [passwordError, setPasswordError] = useState(\"\"),\r\n    [mobileError, setMobileError] = useState(\"\"),\r\n    registerForm = e => {\r\n      e.preventDefault();\r\n      if (formValue.password === formValue.confirmPassword) {\r\n        setPasswordMatch(true);\r\n        mutate(formValue);\r\n      } else {\r\n        setPasswordMatch(false);\r\n      }\r\n    },\r\n    validateEmail = () => {\r\n      if (\r\n        /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\r\n          formValue.username\r\n        )\r\n      ) {\r\n        refetch();\r\n      } else {\r\n        setEmailError(\"Please enter a valid email\");\r\n      }\r\n    },\r\n    validatePassword = () => {\r\n      if (\r\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]+$/.test(\r\n          formValue.password\r\n        )\r\n      )\r\n        setPasswordError(\"\");\r\n      else\r\n        setPasswordError(\r\n          \"Password must contain an uppercase, a lowercase, a number and a special character.\"\r\n        );\r\n    },\r\n    validateMobile = () => {\r\n      if (/[0-9]{10}/.test(formValue.mobile_no)) setMobileError(\"\");\r\n      else setMobileError(\"Please enter a valid mobile number.\");\r\n    };\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      setSession(data?.data?.access);\r\n      close(\"OTP\", { mobile_no: data?.data?.mobile_no });\r\n    }\r\n    if (usernameAvailabilityStatus) {\r\n      setEmailError(usernameAvailabilityData?.data);\r\n    } else {\r\n      setEmailError(\"\");\r\n    }\r\n  }, [isSuccess, usernameAvailabilityStatus]);\r\n  return (\r\n    <Form className=\"registerForm\" onSubmit={registerForm}>\r\n      <Form.Control.Feedback type=\"invalid\" style={{ display: \"block\" }}>\r\n        {error?.data?.username}\r\n      </Form.Control.Feedback>\r\n      {(!!emailError || !!passwordError || !!mobileError) && (\r\n        <Alert variant=\"danger\">\r\n          {emailError || passwordError || mobileError}\r\n        </Alert>\r\n      )}\r\n      <Form.Group controlId=\"name\" className=\"registerForm__email\">\r\n        <Form.Label>Email ID</Form.Label>\r\n        {usernameAvailabilityLoading && (\r\n          <Spinner className=\"registerForm__email__loader\" animation=\"border\" />\r\n        )}\r\n        <Form.Control\r\n          placeholder=\"Enter Email ID\"\r\n          required\r\n          name=\"email\"\r\n          onChange={({ target: { value } }) =>\r\n            setFormValue({ ...formValue, username: value })\r\n          }\r\n          onBlur={validateEmail}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"password\" className=\"registerForm__password\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n          type=\"password\"\r\n          placeholder=\"Enter Password\"\r\n          required\r\n          isInvalid={!passwordMatch || !!passwordError}\r\n          autoComplete=\"new-password\"\r\n          onChange={({ target: { value } }) =>\r\n            setFormValue({ ...formValue, password: value })\r\n          }\r\n          onBlur={validatePassword}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"repassword\" className=\"registerForm__repassword\">\r\n        <Form.Label>Reenter Password</Form.Label>\r\n        <Form.Control\r\n          type=\"password\"\r\n          placeholder=\"Re enter Password\"\r\n          required\r\n          isInvalid={!passwordMatch}\r\n          onChange={({ target: { value } }) =>\r\n            setFormValue({ ...formValue, confirmPassword: value })\r\n          }\r\n        />\r\n        {!passwordMatch && (\r\n          <p className=\"registerForm__password__error\">\r\n            Passwords does not match\r\n          </p>\r\n        )}\r\n      </Form.Group>\r\n      <Form.Label>Phone No</Form.Label>\r\n      <InputGroup controlId=\"phone\" className=\"registerForm__phone\">\r\n        <InputGroup.Prepend className=\"mr-0\">\r\n          <InputGroup.Text>+91</InputGroup.Text>\r\n        </InputGroup.Prepend>\r\n        <Form.Control\r\n          placeholder=\"Enter Phone No\"\r\n          required\r\n          isInvalid={mobileError}\r\n          onBlur={validateMobile}\r\n          onChange={({ target: { value } }) =>\r\n            setFormValue({ ...formValue, mobile_no: value })\r\n          }\r\n        />\r\n      </InputGroup>\r\n      <Button\r\n        className=\"registerForm__submit\"\r\n        type=\"submit\"\r\n        disabled={!!emailError || !!passwordError}\r\n      >\r\n        REGISTER NOW\r\n      </Button>\r\n      <p className=\"registerForm__links\">\r\n        Already a Member?\r\n        <Link\r\n          className=\"registerForm__links__login\"\r\n          onClick={() => close(\"LOGIN\")}\r\n        >\r\n          Login\r\n        </Link>\r\n      </p>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default RegisterForm;\r\n","E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\CardCarousel\\CardCarousel.js",[],"E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\Forms\\LandingForm.js",["199","200","201","202","203","204","205","206","207","208"],"E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\Forms\\OTPForm.js",["209","210","211"],"E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\Forms\\LoginForm.js",["212","213","214","215"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, Form, Row } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { login, setSession } from \"../../services/api\";\r\nimport \"./LoginForm.scss\";\r\nimport { useMutation } from \"react-query\";\r\n\r\nfunction LoginForm({ close }) {\r\n  const [formValue, setFormValue] = useState({ username: \"\", password: \"\" }),\r\n    submit = (e) => {\r\n      e.preventDefault();\r\n      mutate(formValue);\r\n    },\r\n    { mutate, isError, isSuccess, error, data } = useMutation((formData) =>\r\n      login(formData)\r\n    ),\r\n    history = useHistory();\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      setSession(data?.data?.access);\r\n      history.push(\"/home\");\r\n      close();\r\n    }\r\n  }, [isSuccess]);\r\n  return (\r\n    <Form className=\"loginForm\" onSubmit={submit}>\r\n      <Form.Control.Feedback type=\"invalid\" style={{ display: \"block\" }}>\r\n        {error?.data?.detail}\r\n      </Form.Control.Feedback>\r\n      <Form.Group controlId=\"name\" className=\"loginForm__email\">\r\n        <Form.Label>Email ID</Form.Label>\r\n        <Form.Control\r\n          placeholder=\"Enter Email ID / Phone No\"\r\n          onChange={({ target: { value } }) =>\r\n            setFormValue({ ...formValue, username: value })\r\n          }\r\n          required\r\n        />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"password\" className=\"loginForm__password\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n          type=\"password\"\r\n          placeholder=\"Enter Password\"\r\n          onChange={({ target: { value } }) =>\r\n            setFormValue({ ...formValue, password: value })\r\n          }\r\n          required\r\n        />\r\n      </Form.Group>\r\n      <Row className=\"loginForm__options\">\r\n        <Form.Group controlId=\"stay\" className=\"loginForm__options__check\">\r\n          <Form.Check label=\"Remember me\" />\r\n        </Form.Group>\r\n        <Link className=\"loginForm__options__forgot\">Forgot Password?</Link>\r\n      </Row>\r\n      <Button type=\"submit\" className=\"loginForm__submit\">\r\n        Login\r\n      </Button>\r\n      <p className=\"loginForm__postscript\">\r\n        Lorem ipsum is simply a dummy text of printing.\r\n      </p>\r\n      <p className=\"loginForm__links\">\r\n        <Link href=\"javascript:void(0)\" className=\"loginForm__links__terms\">\r\n          Terms of Use\r\n        </Link>\r\n        and\r\n        <Link href=\"javascript:void(0)\" className=\"loginForm__links__privacy\">\r\n          Privacy Policy\r\n        </Link>\r\n      </p>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n","E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\Forms\\HomeForm.js",[],"E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\Dialog\\Dialog.js",["216"],"import React, { useState } from \"react\";\r\nimport { Modal, Image } from \"react-bootstrap\";\r\nimport \"./Dialog.scss\";\r\nimport Close from \"../../assets/icons/svg icon/camera (2).svg\";\r\nimport { LoginForm, RegisterForm, OTPForm, StepForm } from \"../\";\r\n\r\nfunction Dialog({ show, onHide, type, data }) {\r\n  const [currentStep, setCurrentStep] = useState(0),\r\n    Modals = {\r\n      login: \"LOGIN\",\r\n      register: \"REGISTER\",\r\n      otp: \"OTP\",\r\n      step: \"STEP\",\r\n    },\r\n    ModalTitles = {\r\n      [Modals.login]: \"WELCOME BACK! PLEASE LOGIN\",\r\n      [Modals.register]: \"LET'S SET UP YOUR ACCOUNT\",\r\n      [Modals.otp]: \"VERIFY OTP\",\r\n      [Modals.step]: [\r\n        \"PLEASE TELL US ABOUT YOURSELF\",\r\n        \"ALMOST THERE..PLEASE FILL LITTLE MORE INFORMATION\",\r\n        \"PLEASE FILL FAMILY INFORMATION\",\r\n        \"SEARCH YOUR MATCH\",\r\n      ],\r\n    },\r\n    getTitle = (type) => {\r\n      switch (type) {\r\n        case Modals.step:\r\n          return ModalTitles[Modals.step][currentStep];\r\n\r\n        default:\r\n          return ModalTitles[type];\r\n      }\r\n    },\r\n    getModalContent = (type) => {\r\n      switch (type) {\r\n        case Modals.login:\r\n          return <LoginForm close={onHide} />;\r\n        case Modals.register:\r\n          return <RegisterForm close={onHide} />;\r\n        case Modals.otp:\r\n          return <OTPForm close={onHide} modalData={data} />;\r\n        case Modals.step:\r\n          return <StepForm close={onHide} setActive={setCurrentStep} />;\r\n      }\r\n    };\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      centered\r\n      size={type === Modals.step ? \"lg\" : \"\"}\r\n    >\r\n      <Modal.Body className=\"dialog\">\r\n        <div className=\"dialog__header col-lg-10\">\r\n          <Image\r\n            src={Close}\r\n            alt=\"close\"\r\n            className=\"dialog__header__close\"\r\n            onClick={() => onHide()}\r\n          />\r\n          <p className=\"dialog__header__title\">{getTitle(type)}</p>\r\n        </div>\r\n        <div className=\"dialog__content col-lg-10\">{getModalContent(type)}</div>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default Dialog;\r\n","E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\Forms\\StepForm.js",["217","218","219","220","221","222","223","224","225","226","227"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./StepForm.scss\";\r\nimport Stepper from \"react-stepper-horizontal\";\r\nimport { Form, Button, Row, Col, Image } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useQuery, useMutation } from \"react-query\";\r\nimport {\r\n  getOptions,\r\n  createProfile,\r\n  updateProfile,\r\n  createFamilyDetails,\r\n  saveFilter\r\n} from \"../../services/profile\";\r\n\r\nimport BackIcon from \"../../assets/icons/svg icon/next (1).svg\";\r\nimport NextIcon from \"../../assets/icons/svg icon/next (-1.svg\";\r\nimport SkipIcon from \"../../assets/icons/svg icon/skip.svg\";\r\nimport SaveIcon from \"../../assets/icons/svg icon/save-file.svg\";\r\nimport SaveSearch from \"../../assets/icons/svg icon/search-interface-symbol.svg\";\r\nimport { DateTime } from \"luxon\";\r\n\r\nfunction StepForm({ setActive, close }) {\r\n  const [activeStep, setActiveStep] = useState(0),\r\n    [profileData, setProfileData] = useState(0),\r\n    {\r\n      data: {\r\n        results: {\r\n          religion,\r\n          marital_status,\r\n          occupation,\r\n          mother_tongue,\r\n          qualification,\r\n          caste,\r\n          height,\r\n          gender,\r\n          location,\r\n          income\r\n        }\r\n      },\r\n      isSuccess: optionsSuccess\r\n    } = useQuery(\"getOptions\", getOptions),\r\n    history = useHistory(),\r\n    {\r\n      mutate: CreateProfile,\r\n      error: CreateProfileError,\r\n      isSuccess: CreateProfileSuccess,\r\n      data: CreateProfileData\r\n    } = useMutation(formData => createProfile(formData)),\r\n    {\r\n      mutate: UpdateProfile,\r\n      error: UpdateProfileError,\r\n      isSuccess: UpdateProfileSuccess,\r\n      data: UpdateProfileData\r\n    } = useMutation((id, formData) => updateProfile(id, formData)),\r\n    {\r\n      mutate: FamilyDetails,\r\n      error: FamilyDetailsError,\r\n      isSuccess: FamilyDetailsSuccess,\r\n      data: FamilyDetailsData\r\n    } = useMutation(formData => createFamilyDetails(formData)),\r\n    steps = [\r\n      { title: \"Step 1\" },\r\n      { title: \"Step 2\" },\r\n      { title: \"Step 3\" },\r\n      { title: \"Step 4\" }\r\n    ],\r\n    fatherOcc = [\r\n      {\r\n        key: \"government_sector\",\r\n        value: \"Government Sector\"\r\n      },\r\n      {\r\n        key: \"private_sector\",\r\n        value: \"Private Sector\"\r\n      },\r\n      {\r\n        key: \"business_man\",\r\n        value: \"Business man\"\r\n      },\r\n      {\r\n        key: \"retired\",\r\n        value: \"Retired\"\r\n      },\r\n      {\r\n        key: \"no_more\",\r\n        value: \"No More\"\r\n      }\r\n    ],\r\n    motherOcc = [\r\n      {\r\n        key: \"house_wife\",\r\n        value: \"House Wife\"\r\n      },\r\n      {\r\n        key: \"government_sector\",\r\n        value: \"Government Sector\"\r\n      },\r\n      {\r\n        key: \"private_sector\",\r\n        value: \"Private Sector\"\r\n      },\r\n      {\r\n        key: \"business_woman\",\r\n        value: \"Business woman\"\r\n      },\r\n      {\r\n        key: \"retired\",\r\n        value: \"Retired\"\r\n      },\r\n      {\r\n        key: \"no_more\",\r\n        value: \"No More\"\r\n      }\r\n    ],\r\n    initializeDefaults = () => {\r\n      setProfileData({\r\n        location: location[0].key,\r\n        height: height[0].key,\r\n        marital_status: marital_status[0].key,\r\n        gender: gender[0].key,\r\n        religion: religion[0].value,\r\n        caste: caste[religion[0].value][0].key,\r\n        mother_tongue: mother_tongue[0].key,\r\n        occupation: occupation[0].key,\r\n        qualification: qualification[0].key,\r\n        father_is: fatherOcc[0].key,\r\n        mother_is: motherOcc[0].key,\r\n        brothers: 0,\r\n        sisters: 0,\r\n        family_location: location[0].key,\r\n        partner_gender: 1,\r\n        partner_occupation: 1,\r\n        partner_income: 2,\r\n        partner_age: 12,\r\n        partner_location: 2,\r\n        partner_qualification: 2\r\n      });\r\n    },\r\n    nextStep = () => {\r\n      if (activeStep < steps.length - 1) {\r\n        setActiveStep(activeStep + 1);\r\n        setActive(activeStep + 1);\r\n      } else {\r\n        close();\r\n        history.push(\"/home\");\r\n      }\r\n    },\r\n    backStep = () => {\r\n      setActiveStep(activeStep - 1);\r\n      setActive(activeStep - 1);\r\n    },\r\n    handleChange = ({ target: { name, value } }) => {\r\n      setProfileData({ ...profileData, [name]: value });\r\n    },\r\n    populateAge = () => {\r\n      setProfileData({\r\n        ...profileData,\r\n        age: parseInt(\r\n          DateTime.fromJSDate(new Date())\r\n            .diff(DateTime.fromISO(profileData.birth_date), [\"years\"])\r\n            .toObject().years\r\n        )\r\n      });\r\n    },\r\n    handleSubmit = e => {\r\n      e.preventDefault();\r\n      switch (activeStep) {\r\n        case 0:\r\n          CreateProfile({\r\n            first_name: profileData.first_name,\r\n            last_name: profileData.last_name,\r\n            birth_date: DateTime.fromISO(profileData.birth_date).toFormat(\r\n              \"dd-MM-yyyy\"\r\n            ),\r\n            age: profileData.age,\r\n            location: profileData.location,\r\n            height: +profileData.height,\r\n            marital_status: profileData.marital_status,\r\n            gender: profileData.gender\r\n          });\r\n          break;\r\n        case 1:\r\n          UpdateProfile([\r\n            CreateProfileData?.id,\r\n            {\r\n              religion: religion?.filter(\r\n                val => val.value === profileData.religion\r\n              )[0]?.key,\r\n              caste: profileData.caste,\r\n              mother_tongue: profileData.mother_tongue,\r\n              occupation: profileData.occupation,\r\n              qualification: profileData.qualification\r\n            }\r\n          ]);\r\n          break;\r\n        case 2:\r\n          FamilyDetails({\r\n            father_is: profileData.father_is,\r\n            mother_is: profileData.mother_is,\r\n            brothers: +profileData.brothers,\r\n            sisters: +profileData.sisters,\r\n            family_location: profileData.family_location,\r\n            about_family: profileData.about_family\r\n          });\r\n          break;\r\n        case 3:\r\n          saveFilter({\r\n            gender: profileData.partner_gender,\r\n            occupation: [profileData.partner_occupation],\r\n            qualification: [profileData.partner_qualification],\r\n            income: [profileData.partner_income],\r\n            age: {\r\n              from: profileData.partner_age,\r\n              to: +profileData.partner_age + 50\r\n            },\r\n            location: [profileData.location],\r\n            height: {\r\n              from: 4.5,\r\n              to: 5.5\r\n            },\r\n            marital_status: [1, 2, 3, 4],\r\n            mother_tongue: [profileData.mother_tongue],\r\n            religion: profileData.religion,\r\n            caste: [profileData.caste]\r\n          });\r\n          history.push(\"/searchresults\");\r\n          break;\r\n      }\r\n    };\r\n\r\n  useEffect(() => {\r\n    if (CreateProfileSuccess || UpdateProfileSuccess || FamilyDetailsSuccess) {\r\n      nextStep();\r\n    }\r\n    if (optionsSuccess) {\r\n      initializeDefaults();\r\n    }\r\n  }, [\r\n    CreateProfileSuccess,\r\n    UpdateProfileSuccess,\r\n    optionsSuccess,\r\n    FamilyDetailsSuccess\r\n  ]);\r\n  return (\r\n    <>\r\n      <div className=\"stepper\">\r\n        <Stepper\r\n          steps={steps}\r\n          activeStep={activeStep}\r\n          size={48}\r\n          circleFontSize={18}\r\n          activeColor=\"#ffffff\"\r\n          defaultColor=\"#ffffff\"\r\n          defaultBorderWidth={1}\r\n          circleFontColor=\"#fcb432\"\r\n          activeBorderStyle=\"solid\"\r\n          defaultBorderStyle=\"solid\"\r\n          activeBorderColor=\"#fcb432\"\r\n          defaultBorderColor=\"#dfdfdf\"\r\n          completeColor=\"#fcb432\"\r\n          defaultBarColor=\"#eae9ee\"\r\n          completeBarColor=\"#fcb432\"\r\n        />\r\n      </div>\r\n\r\n      <Form className=\"stepForm\" onSubmit={handleSubmit}>\r\n        {activeStep === 0 && (\r\n          <>\r\n            <Form.Row className=\"stepForm__group flex-column flex-lg-row\">\r\n              {!!CreateProfileError && (\r\n                <Form.Control.Feedback\r\n                  type=\"invalid\"\r\n                  style={{ display: \"block\" }}\r\n                >\r\n                  {CreateProfileError?.data}\r\n                </Form.Control.Feedback>\r\n              )}\r\n              <Form.Group as={Col} controlId=\"firstname\">\r\n                <Form.Label className=\"stepForm__label\">First Name</Form.Label>\r\n                <Form.Control\r\n                  name=\"first_name\"\r\n                  className=\"stepForm__control\"\r\n                  placeholder=\"Enter First Name\"\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"lastname\">\r\n                <Form.Label className=\"stepForm__label\">Last Name</Form.Label>\r\n                <Form.Control\r\n                  name=\"last_name\"\r\n                  className=\"stepForm__control\"\r\n                  placeholder=\"Enter Last Name\"\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row className=\"stepForm__group\">\r\n              <Form.Group as={Col} controlId=\"birth\">\r\n                <Form.Label className=\"stepForm__label\">Birth Date</Form.Label>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  className=\"stepForm__control\"\r\n                  name=\"birth_date\"\r\n                  onChange={handleChange}\r\n                  onBlur={populateAge}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"age\">\r\n                <Form.Label className=\"stepForm__label\">Age</Form.Label>\r\n                <Form.Control\r\n                  className=\"stepForm__control\"\r\n                  name=\"age\"\r\n                  value={profileData.age}\r\n                  disabled\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row className=\"stepForm__group flex-column flex-lg-row\">\r\n              <Form.Group as={Col} controlId=\"residing\">\r\n                <Form.Label className=\"stepForm__label\">Location</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  className=\"stepForm__control\"\r\n                  placeholder=\"Enter Residing at\"\r\n                  name=\"location\"\r\n                  onChange={handleChange}\r\n                  required\r\n                >\r\n                  {location?.map(opt => (\r\n                    <option key={opt?.key} value={opt?.key}>\r\n                      {opt?.value}\r\n                    </option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"height\">\r\n                <Form.Label className=\"stepForm__label\">Height</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  className=\"stepForm__control\"\r\n                  name=\"height\"\r\n                  onChange={handleChange}\r\n                  required\r\n                >\r\n                  {height?.map(opt => (\r\n                    <option key={opt?.key} value={opt?.key}>\r\n                      {opt?.value}\r\n                    </option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row className=\"stepForm__group flex-column flex-lg-row\">\r\n              <Form.Group as={Col} controlId=\"gender\">\r\n                <Form.Label className=\"stepForm__label\">Gender</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  className=\"stepForm__control\"\r\n                  name=\"gender\"\r\n                  onChange={handleChange}\r\n                  required\r\n                >\r\n                  {gender?.map(opt => (\r\n                    <option key={opt?.key} value={opt?.key}>\r\n                      {opt?.value}\r\n                    </option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group\r\n                as={Col}\r\n                controlId=\"marital\"\r\n                className=\"stepForm__group\"\r\n              >\r\n                <Form.Label className=\"stepForm__label\">\r\n                  Marital Status\r\n                </Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  className=\"stepForm__control\"\r\n                  name=\"marital_status\"\r\n                  onChange={handleChange}\r\n                  required\r\n                >\r\n                  {marital_status?.map(opt => (\r\n                    <option key={opt?.key} value={opt?.key}>\r\n                      {opt?.value}\r\n                    </option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n          </>\r\n        )}\r\n        {activeStep === 1 && (\r\n          <>\r\n            <Form.Row className=\"stepForm__group flex-column flex-lg-row\">\r\n              <Form.Group as={Col} controlId=\"religion\">\r\n                <Form.Label className=\"stepForm__label\">Religion</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  className=\"stepForm__control\"\r\n                  placeholder=\"Enter Religion\"\r\n                  name=\"religion\"\r\n                  onChange={handleChange}\r\n                >\r\n                  {religion.map(opt => (\r\n                    <option key={opt?.key} value={opt?.value}>\r\n                      {opt?.value}\r\n                    </option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"caste\">\r\n                <Form.Label className=\"stepForm__label\">Caste</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  className=\"stepForm__control\"\r\n                  placeholder=\"Enter Caste\"\r\n                  name=\"caste\"\r\n                  onChange={handleChange}\r\n                  disabled={!profileData?.religion}\r\n                >\r\n                  {profileData?.religion &&\r\n                    caste[profileData?.religion].map(opt => (\r\n                      <option key={opt?.key} value={opt?.key}>\r\n                        {opt?.value}\r\n                      </option>\r\n                    ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row className=\"stepForm__group flex-column flex-lg-row\">\r\n              <Form.Group as={Col} controlId=\"mothertongue\">\r\n                <Form.Label className=\"stepForm__label\">\r\n                  Mother Tongue\r\n                </Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  className=\"stepForm__control\"\r\n                  placeholder=\"Enter Mother Tongue\"\r\n                  name=\"mother_tongue\"\r\n                  onChange={handleChange}\r\n                >\r\n                  {mother_tongue?.map(opt => (\r\n                    <option key={opt?.key} value={opt?.key}>\r\n                      {opt?.value}\r\n                    </option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"occupation\">\r\n                <Form.Label className=\"stepForm__label\">Occupation</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  className=\"stepForm__control\"\r\n                  name=\"occupation\"\r\n                  onChange={handleChange}\r\n                >\r\n                  {occupation?.map(opt => (\r\n                    <option key={opt?.key} value={opt?.key}>\r\n                      {opt?.value}\r\n                    </option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Group\r\n              as={Col}\r\n              controlId=\"qualification\"\r\n              className=\"stepForm__group\"\r\n            >\r\n              <Form.Label className=\"stepForm__label\">\r\n                Highest Qualification\r\n              </Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                className=\"stepForm__control\"\r\n                name=\"qualification\"\r\n                onChange={handleChange}\r\n              >\r\n                {qualification?.map(opt => (\r\n                  <option key={opt?.key} value={opt?.key}>\r\n                    {opt?.value}\r\n                  </option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </>\r\n        )}\r\n        {activeStep === 2 && (\r\n          <>\r\n            <Form.Row className=\"stepForm__group flex-column flex-lg-row\">\r\n              <Form.Group as={Col} controlId=\"father\">\r\n                <Form.Label className=\"stepForm__label\">Father Is</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  name=\"father_is\"\r\n                  className=\"stepForm__control\"\r\n                  placeholder=\"Father Occupation\"\r\n                  onChange={handleChange}\r\n                  required\r\n                >\r\n                  {fatherOcc?.map(opt => (\r\n                    <option key={opt?.key} value={opt?.key}>\r\n                      {opt?.value}\r\n                    </option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"mother\">\r\n                <Form.Label className=\"stepForm__label\">Mother Is</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  name=\"mother_is\"\r\n                  className=\"stepForm__control\"\r\n                  placeholder=\"Mother Occupation\"\r\n                  onChange={handleChange}\r\n                  required\r\n                >\r\n                  {motherOcc?.map(opt => (\r\n                    <option key={opt?.key} value={opt?.key}>\r\n                      {opt?.value}\r\n                    </option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row className=\"stepForm__group flex-column flex-lg-row\">\r\n              <Form.Group as={Col} controlId=\"brother\">\r\n                <Form.Label className=\"stepForm__label\">Brothers</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"brothers\"\r\n                  className=\"stepForm__control\"\r\n                  onChange={handleChange}\r\n                  value={profileData.brothers}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"sister\">\r\n                <Form.Label className=\"stepForm__label\">Sisters</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"sisters\"\r\n                  className=\"stepForm__control\"\r\n                  onChange={handleChange}\r\n                  value={profileData.sisters}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Group\r\n              as={Col}\r\n              controlId=\"location\"\r\n              className=\"stepForm__group\"\r\n            >\r\n              <Form.Label className=\"stepForm__label\">Location</Form.Label>\r\n              <Form.Control\r\n                name=\"family_location\"\r\n                className=\"stepForm__control\"\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Form.Group as={Col} controlId=\"about\" className=\"stepForm__group\">\r\n              <Form.Label className=\"stepForm__label\">About Family</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                name=\"about_family\"\r\n                maxLength={100}\r\n                className=\"stepForm__control\"\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n              <p className=\"my-1 text-right text-black-50\">\r\n                Max. characters: 100\r\n              </p>\r\n            </Form.Group>\r\n          </>\r\n        )}\r\n        {activeStep === 3 && (\r\n          <>\r\n            <Form.Row className=\"stepForm__group flex-column flex-lg-row\">\r\n              <Form.Group as={Col} controlId=\"partner_for\">\r\n                <Form.Label className=\"stepForm__label\">Looking For</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  className=\"stepForm__control\"\r\n                  name=\"partner_gender\"\r\n                  onChange={handleChange}\r\n                >\r\n                  {gender?.map(opt => (\r\n                    <option key={opt?.key} value={opt?.key}>\r\n                      {opt?.value}\r\n                    </option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"partner_occupation\">\r\n                <Form.Label className=\"stepForm__label\">Occupation</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  name=\"partner_occupation\"\r\n                  className=\"stepForm__control\"\r\n                  onChange={handleChange}\r\n                >\r\n                  {occupation?.map(opt => (\r\n                    <option key={opt?.key} value={opt?.key}>\r\n                      {opt?.value}\r\n                    </option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row className=\"stepForm__group flex-column flex-lg-row\">\r\n              <Form.Group as={Col} controlId=\"partner_income\">\r\n                <Form.Label className=\"stepForm__label\">Income</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  name=\"partner_income\"\r\n                  className=\"stepForm__control\"\r\n                  onChange={handleChange}\r\n                >\r\n                  {income?.map(opt => (\r\n                    <option key={opt?.key} value={opt?.key}>\r\n                      {opt?.value}\r\n                    </option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"partner_age\">\r\n                <Form.Label className=\"stepForm__label\">Age</Form.Label>\r\n                <Form.Control\r\n                  name=\"partner_age\"\r\n                  className=\"stepForm__control\"\r\n                  type=\"number\"\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Group\r\n              as={Col}\r\n              controlId=\"partner_location\"\r\n              className=\"stepForm__group\"\r\n            >\r\n              <Form.Label className=\"stepForm__label\">Location</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                className=\"stepForm__control\"\r\n                onChange={handleChange}\r\n                name=\"partner_location\"\r\n              >\r\n                {location?.map(opt => (\r\n                  <option key={opt?.key} value={opt?.key}>\r\n                    {opt?.value}\r\n                  </option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group\r\n              as={Col}\r\n              controlId=\"partner_qualification\"\r\n              className=\"stepForm__group\"\r\n            >\r\n              <Form.Label className=\"stepForm__label\">\r\n                Highest Qualification\r\n              </Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                className=\"stepForm__control\"\r\n                onChange={handleChange}\r\n                name=\"partner_qualification\"\r\n              >\r\n                {qualification?.map(opt => (\r\n                  <option key={opt?.key} value={opt?.key}>\r\n                    {opt?.value}\r\n                  </option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </>\r\n        )}\r\n        <Row className=\"stepForm__actions flex-column flex-sm-row col-12 col-lg-10\">\r\n          <Button\r\n            className=\"stepForm__save \"\r\n            onClick={nextStep}\r\n            disabled={activeStep < 2}\r\n          >\r\n            SKIP\r\n            <Image src={SkipIcon} alt=\"skip\" height={15} />\r\n          </Button>\r\n          <Button className=\"stepForm__submit\" type=\"submit\">\r\n            {activeStep === 3 ? \"Search\" : \"SAVE & Next\"}\r\n            <Image\r\n              src={activeStep === 3 ? SaveSearch : SaveIcon}\r\n              alt=\"save\"\r\n              height={20}\r\n            />\r\n          </Button>\r\n        </Row>\r\n        <p className=\"stepForm__postscript\">\r\n          Lorem ipsum is simply a dummy text of printing.\r\n        </p>\r\n        <p className=\"stepForm__links\">\r\n          <Link href=\"javascript:void(0)\" className=\"stepForm__links__terms\">\r\n            Terms of Use\r\n          </Link>\r\n          and\r\n          <Link href=\"javascript:void(0)\" className=\"stepForm__links__privacy\">\r\n            Privacy Policy\r\n          </Link>\r\n        </p>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default StepForm;\r\n","E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\Footer\\Footer.js",["228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247"],"E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\Header\\Header.js",["248"],"E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\Hero\\LandingPage\\Hero.js",[],"E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\Hero\\LandingPage\\HeroBanner.js",[],"E:\\Official\\React\\Sahjeevan-Frontend\\src\\RoutesGuard.js",[],"E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\DrawerContent\\DrawerContent.js",[],"E:\\Official\\React\\Sahjeevan-Frontend\\src\\hooks\\snackBarHook.js",["249"],"E:\\Official\\React\\Sahjeevan-Frontend\\src\\hooks\\SnackBarHook.js",[],"E:\\Official\\React\\Sahjeevan-Frontend\\src\\components\\snackBar.js",["250"],{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","severity":1,"message":"256","line":2,"column":10,"nodeType":"257","messageId":"258","endLine":2,"endColumn":15},{"ruleId":"255","severity":1,"message":"259","line":3,"column":31,"nodeType":"257","messageId":"258","endLine":3,"endColumn":42},{"ruleId":"255","severity":1,"message":"260","line":19,"column":5,"nodeType":"257","messageId":"258","endLine":19,"endColumn":8},{"ruleId":"255","severity":1,"message":"261","line":9,"column":8,"nodeType":"257","messageId":"258","endLine":9,"endColumn":21},{"ruleId":"255","severity":1,"message":"262","line":10,"column":8,"nodeType":"257","messageId":"258","endLine":10,"endColumn":21},{"ruleId":"255","severity":1,"message":"263","line":11,"column":8,"nodeType":"257","messageId":"258","endLine":11,"endColumn":21},{"ruleId":"255","severity":1,"message":"264","line":82,"column":5,"nodeType":"257","messageId":"258","endLine":82,"endColumn":18},{"ruleId":"255","severity":1,"message":"265","line":85,"column":5,"nodeType":"257","messageId":"258","endLine":85,"endColumn":13},{"ruleId":"266","severity":1,"message":"267","line":98,"column":6,"nodeType":"268","endLine":98,"endColumn":22,"suggestions":"269"},{"ruleId":null,"fatal":true,"severity":2,"message":"270","line":53,"column":1},{"ruleId":"255","severity":1,"message":"271","line":9,"column":3,"nodeType":"257","messageId":"258","endLine":9,"endColumn":12},{"ruleId":"255","severity":1,"message":"272","line":22,"column":8,"nodeType":"257","messageId":"258","endLine":22,"endColumn":12},{"ruleId":"255","severity":1,"message":"273","line":43,"column":7,"nodeType":"257","messageId":"258","endLine":43,"endColumn":13},{"ruleId":"266","severity":1,"message":"274","line":99,"column":6,"nodeType":"268","endLine":99,"endColumn":22,"suggestions":"275"},{"ruleId":"255","severity":1,"message":"276","line":9,"column":8,"nodeType":"257","messageId":"258","endLine":9,"endColumn":24},{"ruleId":"266","severity":1,"message":"277","line":66,"column":6,"nodeType":"268","endLine":66,"endColumn":15,"suggestions":"278"},{"ruleId":"279","severity":1,"message":"280","line":92,"column":17,"nodeType":"281","endLine":96,"endColumn":18},{"ruleId":"282","severity":1,"message":"283","line":93,"column":24,"nodeType":"284","messageId":"285","endLine":93,"endColumn":44},{"ruleId":"279","severity":1,"message":"280","line":105,"column":13,"nodeType":"281","endLine":108,"endColumn":14},{"ruleId":"282","severity":1,"message":"283","line":106,"column":20,"nodeType":"284","messageId":"285","endLine":106,"endColumn":40},{"ruleId":"266","severity":1,"message":"286","line":76,"column":6,"nodeType":"268","endLine":76,"endColumn":33,"suggestions":"287"},{"ruleId":"255","severity":1,"message":"288","line":1,"column":17,"nodeType":"257","messageId":"258","endLine":1,"endColumn":25},{"ruleId":"255","severity":1,"message":"289","line":13,"column":19,"nodeType":"257","messageId":"258","endLine":13,"endColumn":26},{"ruleId":"255","severity":1,"message":"290","line":21,"column":18,"nodeType":"257","messageId":"258","endLine":21,"endColumn":45},{"ruleId":"266","severity":1,"message":"291","line":81,"column":6,"nodeType":"268","endLine":81,"endColumn":45,"suggestions":"292"},{"ruleId":"293","severity":2,"message":"294","line":8,"column":39,"nodeType":"257","messageId":"295","endLine":8,"endColumn":47},{"ruleId":"255","severity":1,"message":"296","line":12,"column":5,"nodeType":"257","messageId":"258","endLine":12,"endColumn":17},{"ruleId":"255","severity":1,"message":"297","line":15,"column":5,"nodeType":"257","messageId":"258","endLine":15,"endColumn":17},{"ruleId":"293","severity":2,"message":"298","line":35,"column":7,"nodeType":"257","messageId":"295","endLine":35,"endColumn":22},{"ruleId":"299","severity":2,"message":"300","line":35,"column":27,"nodeType":"257","messageId":"301","endLine":35,"endColumn":34},{"ruleId":"299","severity":2,"message":"300","line":35,"column":60,"nodeType":"257","messageId":"301","endLine":35,"endColumn":67},{"ruleId":"279","severity":1,"message":"280","line":150,"column":11,"nodeType":"281","endLine":150,"endColumn":80},{"ruleId":"282","severity":1,"message":"283","line":150,"column":19,"nodeType":"284","messageId":"285","endLine":150,"endColumn":39},{"ruleId":"279","severity":1,"message":"280","line":154,"column":11,"nodeType":"281","endLine":157,"endColumn":12},{"ruleId":"282","severity":1,"message":"283","line":155,"column":18,"nodeType":"284","messageId":"285","endLine":155,"endColumn":38},{"ruleId":"255","severity":1,"message":"302","line":9,"column":46,"nodeType":"257","messageId":"258","endLine":9,"endColumn":50},{"ruleId":"266","severity":1,"message":"303","line":27,"column":6,"nodeType":"268","endLine":27,"endColumn":17,"suggestions":"304"},{"ruleId":"282","severity":1,"message":"283","line":61,"column":22,"nodeType":"284","messageId":"285","endLine":61,"endColumn":42},{"ruleId":"255","severity":1,"message":"289","line":14,"column":15,"nodeType":"257","messageId":"258","endLine":14,"endColumn":22},{"ruleId":"266","severity":1,"message":"305","line":24,"column":6,"nodeType":"268","endLine":24,"endColumn":17,"suggestions":"306"},{"ruleId":"282","severity":1,"message":"283","line":64,"column":20,"nodeType":"284","messageId":"285","endLine":64,"endColumn":40},{"ruleId":"282","severity":1,"message":"283","line":68,"column":20,"nodeType":"284","messageId":"285","endLine":68,"endColumn":40},{"ruleId":"307","severity":1,"message":"308","line":36,"column":7,"nodeType":"309","messageId":"310","endLine":45,"endColumn":8},{"ruleId":"255","severity":1,"message":"311","line":15,"column":8,"nodeType":"257","messageId":"258","endLine":15,"endColumn":16},{"ruleId":"255","severity":1,"message":"312","line":16,"column":8,"nodeType":"257","messageId":"258","endLine":16,"endColumn":16},{"ruleId":"255","severity":1,"message":"313","line":51,"column":14,"nodeType":"257","messageId":"258","endLine":51,"endColumn":32},{"ruleId":"255","severity":1,"message":"314","line":53,"column":13,"nodeType":"257","messageId":"258","endLine":53,"endColumn":30},{"ruleId":"255","severity":1,"message":"315","line":57,"column":14,"nodeType":"257","messageId":"258","endLine":57,"endColumn":32},{"ruleId":"255","severity":1,"message":"316","line":59,"column":13,"nodeType":"257","messageId":"258","endLine":59,"endColumn":30},{"ruleId":"255","severity":1,"message":"317","line":148,"column":5,"nodeType":"257","messageId":"258","endLine":148,"endColumn":13},{"ruleId":"307","severity":1,"message":"308","line":167,"column":7,"nodeType":"309","messageId":"310","endLine":228,"endColumn":8},{"ruleId":"266","severity":1,"message":"318","line":238,"column":6,"nodeType":"268","endLine":243,"endColumn":4,"suggestions":"319"},{"ruleId":"282","severity":1,"message":"283","line":721,"column":22,"nodeType":"284","messageId":"285","endLine":721,"endColumn":42},{"ruleId":"282","severity":1,"message":"283","line":725,"column":22,"nodeType":"284","messageId":"285","endLine":725,"endColumn":42},{"ruleId":"279","severity":1,"message":"280","line":29,"column":17,"nodeType":"281","endLine":32,"endColumn":18},{"ruleId":"282","severity":1,"message":"283","line":30,"column":24,"nodeType":"284","messageId":"285","endLine":30,"endColumn":44},{"ruleId":"279","severity":1,"message":"280","line":35,"column":17,"nodeType":"281","endLine":38,"endColumn":18},{"ruleId":"282","severity":1,"message":"283","line":36,"column":24,"nodeType":"284","messageId":"285","endLine":36,"endColumn":44},{"ruleId":"279","severity":1,"message":"280","line":41,"column":17,"nodeType":"281","endLine":44,"endColumn":18},{"ruleId":"282","severity":1,"message":"283","line":42,"column":24,"nodeType":"284","messageId":"285","endLine":42,"endColumn":44},{"ruleId":"279","severity":1,"message":"280","line":47,"column":17,"nodeType":"281","endLine":50,"endColumn":18},{"ruleId":"282","severity":1,"message":"283","line":48,"column":24,"nodeType":"284","messageId":"285","endLine":48,"endColumn":44},{"ruleId":"279","severity":1,"message":"280","line":59,"column":19,"nodeType":"281","endLine":59,"endColumn":48},{"ruleId":"282","severity":1,"message":"283","line":59,"column":27,"nodeType":"284","messageId":"285","endLine":59,"endColumn":47},{"ruleId":"279","severity":1,"message":"280","line":62,"column":19,"nodeType":"281","endLine":62,"endColumn":48},{"ruleId":"282","severity":1,"message":"283","line":62,"column":27,"nodeType":"284","messageId":"285","endLine":62,"endColumn":47},{"ruleId":"279","severity":1,"message":"280","line":65,"column":19,"nodeType":"281","endLine":65,"endColumn":48},{"ruleId":"282","severity":1,"message":"283","line":65,"column":27,"nodeType":"284","messageId":"285","endLine":65,"endColumn":47},{"ruleId":"279","severity":1,"message":"280","line":127,"column":13,"nodeType":"281","endLine":127,"endColumn":72},{"ruleId":"282","severity":1,"message":"283","line":127,"column":21,"nodeType":"284","messageId":"285","endLine":127,"endColumn":41},{"ruleId":"279","severity":1,"message":"280","line":131,"column":15,"nodeType":"281","endLine":134,"endColumn":16},{"ruleId":"282","severity":1,"message":"283","line":132,"column":22,"nodeType":"284","messageId":"285","endLine":132,"endColumn":42},{"ruleId":"279","severity":1,"message":"280","line":138,"column":15,"nodeType":"281","endLine":141,"endColumn":16},{"ruleId":"282","severity":1,"message":"283","line":139,"column":22,"nodeType":"284","messageId":"285","endLine":139,"endColumn":42},{"ruleId":"255","severity":1,"message":"320","line":17,"column":9,"nodeType":"257","messageId":"258","endLine":17,"endColumn":18},{"ruleId":"255","severity":1,"message":"321","line":1,"column":8,"nodeType":"257","messageId":"258","endLine":1,"endColumn":13},{"ruleId":"255","severity":1,"message":"322","line":1,"column":27,"nodeType":"257","messageId":"258","endLine":1,"endColumn":36},"no-native-reassign",["323"],"no-negated-in-lhs",["324"],"no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","'ListOptions' is defined but never used.","'obj' is assigned a value but never used.","'profileImage2' is defined but never used.","'profileImage3' is defined but never used.","'profileImage4' is defined but never used.","'checkSelected' is assigned a value but never used.","'getIndex' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.","ArrayExpression",["325"],"Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 51 | \u001b[39m      btnText\u001b[33m:\u001b[39m \u001b[32m\"Upgrade\"\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 52 | \u001b[39m    }\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 53 | \u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mHEAD\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m\u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 54 | \u001b[39m    { data\u001b[33m:\u001b[39m premiumCards } \u001b[33m=\u001b[39m useQuery(\u001b[32m\"premiumMatches\"\u001b[39m\u001b[33m,\u001b[39m premiumMatches\u001b[33m,\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 55 | \u001b[39m      refetchOnWindowFocus\u001b[33m:\u001b[39m \u001b[36mfalse\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 56 | \u001b[39m    })\u001b[33m,\u001b[39m\u001b[0m","'FormLabel' is defined but never used.","'Save' is defined but never used.","'mutate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Options?.results?.gender', 'Options?.results?.height', 'Options?.results?.income', 'Options?.results?.location', 'Options?.results?.marital_status', 'Options?.results?.mother_tongue', 'Options?.results?.occupation', 'Options?.results?.qualification', and 'Options?.results?.religion'. Either include them or remove the dependency array.",["326"],"'ViewContactWhite' is defined but never used.","React Hook useEffect has missing dependencies: 'error?.data' and 'message'. Either include them or remove the dependency array.",["327"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","React Hook useEffect has missing dependencies: 'data', 'mutate', and 'setProfiles'. Either include them or remove the dependency array. If 'setProfiles' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["328"],"'useState' is defined but never used.","'isError' is assigned a value but never used.","'usernameAvailabilitySuccess' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'close', 'data?.data?.access', 'data?.data?.mobile_no', and 'usernameAvailabilityData?.data'. Either include them or remove the dependency array. If 'close' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["329"],"no-undef","'useState' is not defined.","undef","'handleChange' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'isAuthenticated' is not defined.","no-restricted-globals","Unexpected use of 'history'.","defaultMessage","'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'close'. Either include it or remove the dependency array. If 'close' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["330"],"React Hook useEffect has missing dependencies: 'close', 'data?.data?.access', and 'history'. Either include them or remove the dependency array. If 'close' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["331"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'BackIcon' is defined but never used.","'NextIcon' is defined but never used.","'UpdateProfileError' is assigned a value but never used.","'UpdateProfileData' is assigned a value but never used.","'FamilyDetailsError' is assigned a value but never used.","'FamilyDetailsData' is assigned a value but never used.","'backStep' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'initializeDefaults' and 'nextStep'. Either include them or remove the dependency array.",["332"],"'landLinks' is assigned a value but never used.","'React' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},"Update the dependencies array to be: [optionSelected, refetch]",{"range":"349","text":"350"},"Update the dependencies array to be: [Options?.results?.gender, Options?.results?.height, Options?.results?.income, Options?.results?.location, Options?.results?.marital_status, Options?.results?.mother_tongue, Options?.results?.occupation, Options?.results?.qualification, Options?.results?.religion, OptionsSuccess]",{"range":"351","text":"352"},"Update the dependencies array to be: [error?.data, isError, message]",{"range":"353","text":"354"},"Update the dependencies array to be: [isSuccess, SearchProfiles, setProfiles, mutate, data]",{"range":"355","text":"356"},"Update the dependencies array to be: [close, data?.data?.access, data?.data?.mobile_no, isSuccess, usernameAvailabilityData?.data, usernameAvailabilityStatus]",{"range":"357","text":"358"},"Update the dependencies array to be: [close, isSuccess]",{"range":"359","text":"360"},"Update the dependencies array to be: [close, data?.data?.access, history, isSuccess]",{"range":"361","text":"362"},"Update the dependencies array to be: [CreateProfileSuccess, UpdateProfileSuccess, optionsSuccess, FamilyDetailsSuccess, nextStep, initializeDefaults]",{"range":"363","text":"364"},[3072,3088],"[optionSelected, refetch]",[3043,3059],"[Options?.results?.gender, Options?.results?.height, Options?.results?.income, Options?.results?.location, Options?.results?.marital_status, Options?.results?.mother_tongue, Options?.results?.occupation, Options?.results?.qualification, Options?.results?.religion, OptionsSuccess]",[2027,2036],"[error?.data, isError, message]",[2076,2103],"[isSuccess, SearchProfiles, setProfiles, mutate, data]",[2535,2574],"[close, data?.data?.access, data?.data?.mobile_no, isSuccess, usernameAvailabilityData?.data, usernameAvailabilityStatus]",[870,881],"[close, isSuccess]",[765,776],"[close, data?.data?.access, history, isSuccess]",[6987,7094],"[CreateProfileSuccess, UpdateProfileSuccess, optionsSuccess, FamilyDetailsSuccess, nextStep, initializeDefaults]"]